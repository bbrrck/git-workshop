---
title: "Git workshop"
subtitle: "*Aj Ty v IT*"
author: "Tibor Stanko"
date: "*13.9.2022*"
format:
    revealjs: 
        theme: [simple, slides.scss]
        width: 1600
        # height: 800
        number-sections: true
        number-depth: 1
        # preview-links: true
        # logo: logo.png
        # chalkboard: true
        # toc: true
        # toc-depth: 1
        # footer: "Git workshop - 13.9.2022"
        # center-title-slide: true
        # code-line-numbers: true
        title-slide-attributes:
            data-background-image: img/hero.svg
            data-background-size: 50%
            data-background-position: bottom
            # footer: "."
        auto-animate-easing: ease-in-out
        auto-animate-unmatched: false
        auto-animate-duration: 0.8
---

## O mne <!-- # Úvod -->

:::: {.columns}

::: {.column width="72%"}
- [Tibor Stanko](https://tiborstanko.sk/), 31 rokov
- od 2020 dátový inžinier v Zurich Insurance, Bratislava 🇸🇰
- predtým 6 rokov v akademickej sfére vo 🇫🇷 (PhD, postdoc)
- rád automatizujem nudné úlohy s pomocou Pythonu 🐍
- nie som Git guru, no Git používam denne už viac ako 7 rokov
- moje voľnočasové aktivity: 👨‍👩‍👧‍👦🚲⛰️🎸🎹🍺
:::

::: {.column width="28%"}
![](img/tibors.jpg){.rounded-corners}
:::

::::

## O tomto workshope

## Anketa!

 <!-- SECTION - Git a Github -->

# Git a Github

## Čo je to Git?

- **systém pre správu verzií**
- angl. *version control system* (VCS) alebo *source control management* (SCM)
- zaznamenáva históriu vývoja projektu
- užitočný pre tímy aj pre jednotlivcov
- nie je len o kóde, dovoľuje ukladať ľubovoľné súbory


## Prečo potrebujeme systémy na správu verzií?
![](img/how-not-to-name-files.png)

## Prečo potrebujeme systémy na správu verzií?
![](img/how-not-to-name-files-crossed.png)

## Čo umožňuje Git?

::: {.incremental}
- ukladať verzie
- prepínať medzi verziami
- obnoviť predošlú verziu
- porovnávať verzie
- vytvárať vetvy
- zlučovať vetvy
<!-- - riešiť konflikty medzi vetvami -->
:::

## Git slovník

::: {.columns}

::: {.column width="50%" .smaller}
| en | sk |
|---|---|
| *branch*              | vetva |
| *clone*               | naklonovanie repozitára |
| *commit*              | záznam |
| *commit message*      | popis záznamu |
| *conflict*            | konflikt medzi verziami |
| *conflict resolution* | riešenie konfliktov |
| *diff*                | rozdiel medzi verziami |
| *merge*               | zlúčenie vetiev |
:::

::: {.column width="50%" .smaller}
| en | sk |
|---|---|
| *pull*                | stiahnutie *remote* zmien |
| *push*                | odoslanie lokálnych zmien |
| *repository*          | repozitár, úložisko |
| *remote*              | vzdialený repozitár |
| *snapshot*            | snímok |
| *staging area*        | prípravná oblasť (tiež *index*) |
| *status*              | stav repozitára |
| *version*             | verzia |
:::

:::

## Čo je to Github?
#### *sociálna sieť pre programátorov*
- **Git** = systém na správu verzií
- **Github** = cloudový portál na ukladanie repozitárov
- používa Git, no nie je jeho súčasťou
<!-- - portál na ukladanie vzdialených Git repozitárov -->
- obsahuje funkcionalitu ktorá nie je v Gite
    - *Issues*
    - *Pull requests*
    - *Actions*
    - ...
- podobné služby: [Gitlab](https://about.gitlab.com/), [Bitbucket](https://bitbucket.org/), [Azure DevOps](https://dev.azure.com/), 
<!-- [Google Cloud Source Repositories](https://source.cloud.google.com/onboarding/welcome), -->
...

## {background-image="img/github-screenshot.png" background-size="contain"}

# Základy Gitu

## Krok 0: Pracujeme s konzolou

- aby sme lepšie pochopili ako Git funguje, budeme na začiatku spúšťať Git príkazy cez **konzolu** (terminál)
- neskôr si ukážeme aj použitie Gitu bez konzoly (napr. vo VS Code)
- vo Windowse: **PowerShell**
- dve možnosti ako spustiť PowerShell:
    a. vyhľadajte "powershell" cez štartové menu 
    b. stlačte `⊞ Win + R`, do okna napíšte "powershell" a stlačte OK
- voliteľné nástroje pre lepšiu použiteľnosť:
    - [Windows Terminal](https://apps.microsoft.com/store/detail/windows-terminal/9N0DX20HK701?hl=en-us&gl=us)
    - [Oh My Posh](https://ohmyposh.dev/): prompt theme engine
    
::: {.notes}
- aby sme lepšie pochopili ako Git funguje, budeme na začiatku spúšťať Git príkazy cez konzolu (terminál)
- neskôr si ukážeme ako sa Git dá používať bez konzoly (mnohé textové editory a IDE majú zabudovanú Git integráciu)
:::


## Krok 1: Inštalácia Gitu

Vo **Windowse** existuje viacero spôsobov ako nainštalovať Git, napr.

- cez [scoop](https://scoop.sh/) (odporúčam) --- v PowerShell spustite nasledovné príkazy:
```powershell
# inštalácia scoopu
Set-ExecutionPolicy RemoteSigned -Scope CurrentUser
irm get.scoop.sh | iex

# inštalácia gitu
scoop install git
```
- cez klasický [inštalátor](https://git-scm.com/download/win)

Inštrukcie pre **macOS** a **Linux** sú k dispozícii na oficiálnej stránke [v angličtine](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) alebo [v češtine](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git).

## Krok 2: Nastavenie Gitu {auto-animate="true"}

Skontrolujme či je Git správne nainštalovaný:
```sh
git --version
```

Predtým ako začneme pracovať s Gitom, je potrebné nastaviť si meno a email. Tieto údaje bude Git používať na priradenie autora k verzii:
```sh
git config --global user.name "Tibor Stanko"
git config --global user.email "tibor.stanko@zurich.com"
```

## Krok 3: Vytvorenie Git repozitára

```sh
cd git-workshop
git init
```

## Krok 4: Uloženie verzie

```sh
git status
git status -s
git add test.txt
git commit -m "pridal som test.txt"
```

## Úlohy
1. Vytvor si na svojom počítači prázdny adresár `git-workshop`
1. Sprav z adresára `git-workshop` Git repozitár 
1. Vytvor v adresári súbor `test.txt` s ľubovoľným obsahom
1. Pridaj `test.txt` do ďalšej verzie a ulož ju

## Demo: VS Code Gui

# Vetvy *(branches)*

## Načo sú dobré vetvy?

## Vytvorenie vetvy *(branch)*
```sh
git branch dog
git checkout dog
```

alebo

```sh
git checkout -b dog
```

## Zlučovanie vetiev *(merge)*

```sh
git checkout main
git merge dog
```

## Riešenie *merge* konfliktov
```sh
git merge cat
# (!)
# konflikt v animals.py:
# zmeny z oboch vetiev musia byť 
# zlúčené manuálne (napr. vo VS Code)

# pridaj zmeny do ďalšej verzie
git add animals.py
# ulož novú verziu su zlúčenými zmenami
git commit -m "merged dog and cat features"
```

# Vzdialené repozitáre *(remote)*

## Vytvorenie repozitára na Githube

## Poslanie lokálnej kópie na *remote*

```sh
git push -u origin main
```

```powershell
PS C:\Users\tibor.stanko\repo> git push -u origin main
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 241 bytes | 120.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/bbrrck/test-repo-01.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.
```

## Klonovanie existujúceho *remote* repozitára
```sh
git clone https://github.com/bbrrck/animals.git
```

# Markdown rýchlokurz

# Užitočné zdroje

## Dokumentácia
- [Oficiálna stránka](https://git-scm.com) a [dokumentácia](https://git-scm.com/doc) Gitu
- [Pro Git](https://git-scm.com/book/en/v2), voľne dostupná oficiálna kniha, k dispozícii čiastočne aj [v češtine](https://git-scm.com/book/cs/v2)

## Kurzy & tutoriály

### sk
- videokurz od Yablka: [Git a Github od základov](https://www.youtube.com/watch?v=0v5K4GvK4Gs)
- predmet *Základy softvérového inžinierstva* na FEI TUKE
    - časť 2: [Systémy pre správu verzií](https://kurzy.kpi.fei.tuke.sk/zsi/labs/02-git.html)
    - časť 3: [Práca s vetvami v systéme Git](https://kurzy.kpi.fei.tuke.sk/zsi/labs/03-git.html)

### en
- [git - the simple guide](https://rogerdudler.github.io/git-guide/)
- Coursera: [Introduction to Git and GitHub](https://www.coursera.org/learn/introduction-git-github/)
- Missing Semester of CS Education, [Lecture 6: Version Control (git)](https://www.youtube.com/watch?v=2sjqTHE0zok)
- [Learn how Git works internally with simple diagrams](https://medium.com/@praveenmuth2/learn-how-git-works-internally-with-simple-diagrams-a9349dc32831)
- [Atlassian Git tutorial](https://www.atlassian.com/git/tutorials)

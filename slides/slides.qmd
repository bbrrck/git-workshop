---
title: "Git workshop"
subtitle: "*Aj Ty v IT*"
author: "Tibor Stanko"
date: "*13.9.2022*"
format:
    revealjs: 
        theme: [simple, slides.scss]
        width: 1600
        # height: 800
        number-sections: true
        number-depth: 1
        # preview-links: true
        # logo: logo.png
        # chalkboard: true
        # toc: true
        # toc-depth: 1
        # footer: "Git workshop - 13.9.2022"
        center-title-slide: true
        code-line-numbers: true
        title-slide-attributes:
            data-background-image: img/hero.svg
            data-background-size: 50%
            data-background-position: bottom
            # footer: "."
---

# Úvod

## O mne

:::: {.columns}

::: {.column width="70%"}
- [Tibor Stanko](https://tiborstanko.sk/), 31 rokov
- od 2020 dátový inžinier v Zurich Insurance, Bratislava 🇸🇰
- predtým 6 rokov v akademickej sfére vo 🇫🇷 (PhD, postdoc)
- rád automatizujem nudné úlohy s pomocou Pythonu 🐍
- nie som Git guru, no Git používam už viac ako 7 rokov
- moje voľnočasové aktivity: 👨‍👩‍👧‍👦🧱🚲🏃⛰️
:::

::: {.column width="30%"}
![](img/tibors.jpg){border-radius=100px}
:::

::::

## O tomto workshope

## Anketa!

 <!-- SECTION - Git a Github -->

# Git a Github

## Čo je to Git?

- **systém pre správu verzií**
- angl. *version control system* (VCS)
- zaznamenáva históriu vývoja projektu
- užitočný pre tímy aj pre jednotlivcov
- nie je len o kóde

## Čo umožňuje Git?
- ukladanie verzií
- obnoviť predošlú verziu
- porovnávať verzie
- vytvárať vetvy
- zlučovať vetvy
- riešiť konflikty

## Prečo potrebujeme Git?

*TODO - traditional approach - save many versions of the same file on disk, keep track of version in the filename*

## Čo je to Github?

<!-- ::: {.smaller} -->

## Git slovník

| en | sk |
|---|---|
| *branch*              | vetva |
| *clone*               | naklonovanie repozitára |
| *commit*              | záznam, zaznamenanie |
| *commit message*      | popis záznamu |
| *conflict*            | konflikt medzi verziami |
| *conflict resolution* | riešenie konfliktov |
| *diff*                | rozdiel medzi verziami |
| *merge*               | zlúčenie vetiev |
| *pull*                | stiahnutie *remote* zmien |
| *push*                | odoslanie lokálnych zmien |
| *repository*          | repozitár, úložisko |
| *remote*              | vzdialený repozitár |
| *snapshot*            | snímok |
| *staging area*        | prípravná oblasť (tiež *index*) |
| *status*              | stav repozitára |
| *version*             | verzia |

:::

 <!-- SECTION -->

# Pracujeme s Gitom: základy

## Krok 0: PowerShell


## Krok 1: Inštalácia Gitu

Vo **Windowse** existuje viacero spôsobov ako nainštalovať Git, napr.

- cez [scoop](https://scoop.sh/) (odporúčam): v PowerShell spustite nasledovné príkazy:
```powershell
# inštalácia scoopu
Set-ExecutionPolicy RemoteSigned -Scope CurrentUser
irm get.scoop.sh | iex

# inštalácia gitu
scoop install git
```
- cez klasický [inštalátor](https://git-scm.com/download/win)

Inštrukcie pre **macOS** a **Linux** sú k dispozícii na oficiálnej stránke [v angličtine](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git) alebo [v češtine](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git).


## Krok 2: Nastavenie Gitu

```sh
git --version
git config --global user.name "Tibor Stanko"
git config --global user.email "tibor.stanko@zurich.com"
git config --global init.defaultBranch main
```

## Krok 3: Vytvorenie repozitára

```sh
cd git-workshop
git init
```

## Krok 4: Uloženie verzie

```sh
git status
git status -s
git add test.txt
git commit -m "pridal som test.txt"
```

## Úlohy
1. Vytvor si na svojom počítači prázdny adresár `git-workshop`
1. Sprav z adresára `git-workshop` Git repozitár 
1. Vytvor v adresári súbor `test.txt` s obsahom `Ahoj Aj Ty v IT!`
1. Pridaj `test.txt` do ďalšej verzie
1. Ulož novú verziu

# Vzdialené repozitáre

## Git push

```powershell
PS C:\Users\tibor.stanko\repo> git push -u origin main
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 241 bytes | 120.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/bbrrck/test-repo-01.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.
```


# Užitočné zdroje

## Dokumentácia
- [Oficiálna stránka](https://git-scm.com) a [dokumentácia](https://git-scm.com/doc) Gitu
- [Pro Git](https://git-scm.com/book/en/v2), voľne dostupná oficiálna kniha, k dispozícii čiastočne aj [v češtine](https://git-scm.com/book/cs/v2)

## Kurzy
- videokurz v slovenčine od Yablka: [Git a Github od základov](https://www.youtube.com/watch?v=0v5K4GvK4Gs)
- kurz v slovenčine na FEI TUKE, časti [Systémy pre správu verzií](https://kurzy.kpi.fei.tuke.sk/zsi/labs/02-git.html) a [Práca s vetvami v systéme Git](https://kurzy.kpi.fei.tuke.sk/zsi/labs/03-git.html)
- [git - the simple guide](https://rogerdudler.github.io/git-guide/)
- Coursera: [Introduction to Git and GitHub](https://www.coursera.org/learn/introduction-git-github/)
- Missing Semester of CS Education, [Lecture 6: Version Control (git)](https://www.youtube.com/watch?v=2sjqTHE0zok)
- [Learn how Git works internally with simple diagrams](https://medium.com/@praveenmuth2/learn-how-git-works-internally-with-simple-diagrams-a9349dc32831): článok s diagramami na pochopoenie toho ako fungujú Git príkazy
- [Atlassian Git tutorial](https://www.atlassian.com/git/tutorials)
